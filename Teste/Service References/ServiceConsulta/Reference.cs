//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Teste.ServiceConsulta {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceConsulta.IConsultas")]
    public interface IConsultas {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultas/Rastreamento", ReplyAction="http://tempuri.org/IConsultas/RastreamentoResponse")]
        string Rastreamento(string login, string senha, string dataInicial, string dataFinal, string codigoRemetente, string codigoDestinatario, string entregue, string numeroNota, string numeroConhecimento, string codigoCentroCusto, string ufOrigem, string cidadeOrigem, string ufDestino, string cidadeDestino);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IConsultas/Rastreamento", ReplyAction="http://tempuri.org/IConsultas/RastreamentoResponse")]
        System.IAsyncResult BeginRastreamento(
                    string login, 
                    string senha, 
                    string dataInicial, 
                    string dataFinal, 
                    string codigoRemetente, 
                    string codigoDestinatario, 
                    string entregue, 
                    string numeroNota, 
                    string numeroConhecimento, 
                    string codigoCentroCusto, 
                    string ufOrigem, 
                    string cidadeOrigem, 
                    string ufDestino, 
                    string cidadeDestino, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        string EndRastreamento(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultas/OcorrenciasNovo", ReplyAction="http://tempuri.org/IConsultas/OcorrenciasNovoResponse")]
        string OcorrenciasNovo(string cnpjCliente, string codigoDestinatario, string numeroNota, string dataInicial, string dataFinal, string senha, string numeroReferencia, string numeroPedido);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IConsultas/OcorrenciasNovo", ReplyAction="http://tempuri.org/IConsultas/OcorrenciasNovoResponse")]
        System.IAsyncResult BeginOcorrenciasNovo(string cnpjCliente, string codigoDestinatario, string numeroNota, string dataInicial, string dataFinal, string senha, string numeroReferencia, string numeroPedido, System.AsyncCallback callback, object asyncState);
        
        string EndOcorrenciasNovo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultas/ConsultarEstoque", ReplyAction="http://tempuri.org/IConsultas/ConsultarEstoqueResponse")]
        string ConsultarEstoque(string cnpjCliente, string codigoProduto, string descricaoProduto, string senha);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IConsultas/ConsultarEstoque", ReplyAction="http://tempuri.org/IConsultas/ConsultarEstoqueResponse")]
        System.IAsyncResult BeginConsultarEstoque(string cnpjCliente, string codigoProduto, string descricaoProduto, string senha, System.AsyncCallback callback, object asyncState);
        
        string EndConsultarEstoque(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultas/ValidarLoginCliente", ReplyAction="http://tempuri.org/IConsultas/ValidarLoginClienteResponse")]
        int ValidarLoginCliente(string login, string senha);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IConsultas/ValidarLoginCliente", ReplyAction="http://tempuri.org/IConsultas/ValidarLoginClienteResponse")]
        System.IAsyncResult BeginValidarLoginCliente(string login, string senha, System.AsyncCallback callback, object asyncState);
        
        int EndValidarLoginCliente(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultas/RetornarLoginCliente", ReplyAction="http://tempuri.org/IConsultas/RetornarLoginClienteResponse")]
        string RetornarLoginCliente(string login, string senha);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IConsultas/RetornarLoginCliente", ReplyAction="http://tempuri.org/IConsultas/RetornarLoginClienteResponse")]
        System.IAsyncResult BeginRetornarLoginCliente(string login, string senha, System.AsyncCallback callback, object asyncState);
        
        string EndRetornarLoginCliente(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultas/ListarCentroCusto", ReplyAction="http://tempuri.org/IConsultas/ListarCentroCustoResponse")]
        string ListarCentroCusto(string login, string senha, int idRemetente);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IConsultas/ListarCentroCusto", ReplyAction="http://tempuri.org/IConsultas/ListarCentroCustoResponse")]
        System.IAsyncResult BeginListarCentroCusto(string login, string senha, int idRemetente, System.AsyncCallback callback, object asyncState);
        
        string EndListarCentroCusto(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultas/ListarCidade", ReplyAction="http://tempuri.org/IConsultas/ListarCidadeResponse")]
        string ListarCidade(string login, string senha, string estado, string cidade);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IConsultas/ListarCidade", ReplyAction="http://tempuri.org/IConsultas/ListarCidadeResponse")]
        System.IAsyncResult BeginListarCidade(string login, string senha, string estado, string cidade, System.AsyncCallback callback, object asyncState);
        
        string EndListarCidade(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultas/ListarPessoa", ReplyAction="http://tempuri.org/IConsultas/ListarPessoaResponse")]
        string ListarPessoa(string login, string senha, bool empresa, string cgcCPF, string nome, int idPessoa);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IConsultas/ListarPessoa", ReplyAction="http://tempuri.org/IConsultas/ListarPessoaResponse")]
        System.IAsyncResult BeginListarPessoa(string login, string senha, bool empresa, string cgcCPF, string nome, int idPessoa, System.AsyncCallback callback, object asyncState);
        
        string EndListarPessoa(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConsultas/ConsultarFinanceiro", ReplyAction="http://tempuri.org/IConsultas/ConsultarFinanceiroResponse")]
        string ConsultarFinanceiro(string login, string senha, string tipoDocumento, string numeroDocumento, string dataVencimentoInicial, string dataVencimentoFinal, string dataEmissaoInicial, string dataEmissaoFinal, int idEmpresaEmissora);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IConsultas/ConsultarFinanceiro", ReplyAction="http://tempuri.org/IConsultas/ConsultarFinanceiroResponse")]
        System.IAsyncResult BeginConsultarFinanceiro(string login, string senha, string tipoDocumento, string numeroDocumento, string dataVencimentoInicial, string dataVencimentoFinal, string dataEmissaoInicial, string dataEmissaoFinal, int idEmpresaEmissora, System.AsyncCallback callback, object asyncState);
        
        string EndConsultarFinanceiro(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IConsultasChannel : Teste.ServiceConsulta.IConsultas, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RastreamentoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RastreamentoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OcorrenciasNovoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OcorrenciasNovoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConsultarEstoqueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ConsultarEstoqueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValidarLoginClienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ValidarLoginClienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetornarLoginClienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RetornarLoginClienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListarCentroCustoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListarCentroCustoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListarCidadeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListarCidadeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ListarPessoaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ListarPessoaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConsultarFinanceiroCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ConsultarFinanceiroCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConsultasClient : System.ServiceModel.ClientBase<Teste.ServiceConsulta.IConsultas>, Teste.ServiceConsulta.IConsultas {
        
        private BeginOperationDelegate onBeginRastreamentoDelegate;
        
        private EndOperationDelegate onEndRastreamentoDelegate;
        
        private System.Threading.SendOrPostCallback onRastreamentoCompletedDelegate;
        
        private BeginOperationDelegate onBeginOcorrenciasNovoDelegate;
        
        private EndOperationDelegate onEndOcorrenciasNovoDelegate;
        
        private System.Threading.SendOrPostCallback onOcorrenciasNovoCompletedDelegate;
        
        private BeginOperationDelegate onBeginConsultarEstoqueDelegate;
        
        private EndOperationDelegate onEndConsultarEstoqueDelegate;
        
        private System.Threading.SendOrPostCallback onConsultarEstoqueCompletedDelegate;
        
        private BeginOperationDelegate onBeginValidarLoginClienteDelegate;
        
        private EndOperationDelegate onEndValidarLoginClienteDelegate;
        
        private System.Threading.SendOrPostCallback onValidarLoginClienteCompletedDelegate;
        
        private BeginOperationDelegate onBeginRetornarLoginClienteDelegate;
        
        private EndOperationDelegate onEndRetornarLoginClienteDelegate;
        
        private System.Threading.SendOrPostCallback onRetornarLoginClienteCompletedDelegate;
        
        private BeginOperationDelegate onBeginListarCentroCustoDelegate;
        
        private EndOperationDelegate onEndListarCentroCustoDelegate;
        
        private System.Threading.SendOrPostCallback onListarCentroCustoCompletedDelegate;
        
        private BeginOperationDelegate onBeginListarCidadeDelegate;
        
        private EndOperationDelegate onEndListarCidadeDelegate;
        
        private System.Threading.SendOrPostCallback onListarCidadeCompletedDelegate;
        
        private BeginOperationDelegate onBeginListarPessoaDelegate;
        
        private EndOperationDelegate onEndListarPessoaDelegate;
        
        private System.Threading.SendOrPostCallback onListarPessoaCompletedDelegate;
        
        private BeginOperationDelegate onBeginConsultarFinanceiroDelegate;
        
        private EndOperationDelegate onEndConsultarFinanceiroDelegate;
        
        private System.Threading.SendOrPostCallback onConsultarFinanceiroCompletedDelegate;
        
        public ConsultasClient() {
        }
        
        public ConsultasClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConsultasClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConsultasClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConsultasClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<RastreamentoCompletedEventArgs> RastreamentoCompleted;
        
        public event System.EventHandler<OcorrenciasNovoCompletedEventArgs> OcorrenciasNovoCompleted;
        
        public event System.EventHandler<ConsultarEstoqueCompletedEventArgs> ConsultarEstoqueCompleted;
        
        public event System.EventHandler<ValidarLoginClienteCompletedEventArgs> ValidarLoginClienteCompleted;
        
        public event System.EventHandler<RetornarLoginClienteCompletedEventArgs> RetornarLoginClienteCompleted;
        
        public event System.EventHandler<ListarCentroCustoCompletedEventArgs> ListarCentroCustoCompleted;
        
        public event System.EventHandler<ListarCidadeCompletedEventArgs> ListarCidadeCompleted;
        
        public event System.EventHandler<ListarPessoaCompletedEventArgs> ListarPessoaCompleted;
        
        public event System.EventHandler<ConsultarFinanceiroCompletedEventArgs> ConsultarFinanceiroCompleted;
        
        public string Rastreamento(string login, string senha, string dataInicial, string dataFinal, string codigoRemetente, string codigoDestinatario, string entregue, string numeroNota, string numeroConhecimento, string codigoCentroCusto, string ufOrigem, string cidadeOrigem, string ufDestino, string cidadeDestino) {
            return base.Channel.Rastreamento(login, senha, dataInicial, dataFinal, codigoRemetente, codigoDestinatario, entregue, numeroNota, numeroConhecimento, codigoCentroCusto, ufOrigem, cidadeOrigem, ufDestino, cidadeDestino);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRastreamento(
                    string login, 
                    string senha, 
                    string dataInicial, 
                    string dataFinal, 
                    string codigoRemetente, 
                    string codigoDestinatario, 
                    string entregue, 
                    string numeroNota, 
                    string numeroConhecimento, 
                    string codigoCentroCusto, 
                    string ufOrigem, 
                    string cidadeOrigem, 
                    string ufDestino, 
                    string cidadeDestino, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginRastreamento(login, senha, dataInicial, dataFinal, codigoRemetente, codigoDestinatario, entregue, numeroNota, numeroConhecimento, codigoCentroCusto, ufOrigem, cidadeOrigem, ufDestino, cidadeDestino, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndRastreamento(System.IAsyncResult result) {
            return base.Channel.EndRastreamento(result);
        }
        
        private System.IAsyncResult OnBeginRastreamento(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string login = ((string)(inValues[0]));
            string senha = ((string)(inValues[1]));
            string dataInicial = ((string)(inValues[2]));
            string dataFinal = ((string)(inValues[3]));
            string codigoRemetente = ((string)(inValues[4]));
            string codigoDestinatario = ((string)(inValues[5]));
            string entregue = ((string)(inValues[6]));
            string numeroNota = ((string)(inValues[7]));
            string numeroConhecimento = ((string)(inValues[8]));
            string codigoCentroCusto = ((string)(inValues[9]));
            string ufOrigem = ((string)(inValues[10]));
            string cidadeOrigem = ((string)(inValues[11]));
            string ufDestino = ((string)(inValues[12]));
            string cidadeDestino = ((string)(inValues[13]));
            return this.BeginRastreamento(login, senha, dataInicial, dataFinal, codigoRemetente, codigoDestinatario, entregue, numeroNota, numeroConhecimento, codigoCentroCusto, ufOrigem, cidadeOrigem, ufDestino, cidadeDestino, callback, asyncState);
        }
        
        private object[] OnEndRastreamento(System.IAsyncResult result) {
            string retVal = this.EndRastreamento(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRastreamentoCompleted(object state) {
            if ((this.RastreamentoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RastreamentoCompleted(this, new RastreamentoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RastreamentoAsync(string login, string senha, string dataInicial, string dataFinal, string codigoRemetente, string codigoDestinatario, string entregue, string numeroNota, string numeroConhecimento, string codigoCentroCusto, string ufOrigem, string cidadeOrigem, string ufDestino, string cidadeDestino) {
            this.RastreamentoAsync(login, senha, dataInicial, dataFinal, codigoRemetente, codigoDestinatario, entregue, numeroNota, numeroConhecimento, codigoCentroCusto, ufOrigem, cidadeOrigem, ufDestino, cidadeDestino, null);
        }
        
        public void RastreamentoAsync(string login, string senha, string dataInicial, string dataFinal, string codigoRemetente, string codigoDestinatario, string entregue, string numeroNota, string numeroConhecimento, string codigoCentroCusto, string ufOrigem, string cidadeOrigem, string ufDestino, string cidadeDestino, object userState) {
            if ((this.onBeginRastreamentoDelegate == null)) {
                this.onBeginRastreamentoDelegate = new BeginOperationDelegate(this.OnBeginRastreamento);
            }
            if ((this.onEndRastreamentoDelegate == null)) {
                this.onEndRastreamentoDelegate = new EndOperationDelegate(this.OnEndRastreamento);
            }
            if ((this.onRastreamentoCompletedDelegate == null)) {
                this.onRastreamentoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRastreamentoCompleted);
            }
            base.InvokeAsync(this.onBeginRastreamentoDelegate, new object[] {
                        login,
                        senha,
                        dataInicial,
                        dataFinal,
                        codigoRemetente,
                        codigoDestinatario,
                        entregue,
                        numeroNota,
                        numeroConhecimento,
                        codigoCentroCusto,
                        ufOrigem,
                        cidadeOrigem,
                        ufDestino,
                        cidadeDestino}, this.onEndRastreamentoDelegate, this.onRastreamentoCompletedDelegate, userState);
        }
        
        public string OcorrenciasNovo(string cnpjCliente, string codigoDestinatario, string numeroNota, string dataInicial, string dataFinal, string senha, string numeroReferencia, string numeroPedido) {
            return base.Channel.OcorrenciasNovo(cnpjCliente, codigoDestinatario, numeroNota, dataInicial, dataFinal, senha, numeroReferencia, numeroPedido);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginOcorrenciasNovo(string cnpjCliente, string codigoDestinatario, string numeroNota, string dataInicial, string dataFinal, string senha, string numeroReferencia, string numeroPedido, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOcorrenciasNovo(cnpjCliente, codigoDestinatario, numeroNota, dataInicial, dataFinal, senha, numeroReferencia, numeroPedido, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndOcorrenciasNovo(System.IAsyncResult result) {
            return base.Channel.EndOcorrenciasNovo(result);
        }
        
        private System.IAsyncResult OnBeginOcorrenciasNovo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string cnpjCliente = ((string)(inValues[0]));
            string codigoDestinatario = ((string)(inValues[1]));
            string numeroNota = ((string)(inValues[2]));
            string dataInicial = ((string)(inValues[3]));
            string dataFinal = ((string)(inValues[4]));
            string senha = ((string)(inValues[5]));
            string numeroReferencia = ((string)(inValues[6]));
            string numeroPedido = ((string)(inValues[7]));
            return this.BeginOcorrenciasNovo(cnpjCliente, codigoDestinatario, numeroNota, dataInicial, dataFinal, senha, numeroReferencia, numeroPedido, callback, asyncState);
        }
        
        private object[] OnEndOcorrenciasNovo(System.IAsyncResult result) {
            string retVal = this.EndOcorrenciasNovo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOcorrenciasNovoCompleted(object state) {
            if ((this.OcorrenciasNovoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OcorrenciasNovoCompleted(this, new OcorrenciasNovoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OcorrenciasNovoAsync(string cnpjCliente, string codigoDestinatario, string numeroNota, string dataInicial, string dataFinal, string senha, string numeroReferencia, string numeroPedido) {
            this.OcorrenciasNovoAsync(cnpjCliente, codigoDestinatario, numeroNota, dataInicial, dataFinal, senha, numeroReferencia, numeroPedido, null);
        }
        
        public void OcorrenciasNovoAsync(string cnpjCliente, string codigoDestinatario, string numeroNota, string dataInicial, string dataFinal, string senha, string numeroReferencia, string numeroPedido, object userState) {
            if ((this.onBeginOcorrenciasNovoDelegate == null)) {
                this.onBeginOcorrenciasNovoDelegate = new BeginOperationDelegate(this.OnBeginOcorrenciasNovo);
            }
            if ((this.onEndOcorrenciasNovoDelegate == null)) {
                this.onEndOcorrenciasNovoDelegate = new EndOperationDelegate(this.OnEndOcorrenciasNovo);
            }
            if ((this.onOcorrenciasNovoCompletedDelegate == null)) {
                this.onOcorrenciasNovoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOcorrenciasNovoCompleted);
            }
            base.InvokeAsync(this.onBeginOcorrenciasNovoDelegate, new object[] {
                        cnpjCliente,
                        codigoDestinatario,
                        numeroNota,
                        dataInicial,
                        dataFinal,
                        senha,
                        numeroReferencia,
                        numeroPedido}, this.onEndOcorrenciasNovoDelegate, this.onOcorrenciasNovoCompletedDelegate, userState);
        }
        
        public string ConsultarEstoque(string cnpjCliente, string codigoProduto, string descricaoProduto, string senha) {
            return base.Channel.ConsultarEstoque(cnpjCliente, codigoProduto, descricaoProduto, senha);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginConsultarEstoque(string cnpjCliente, string codigoProduto, string descricaoProduto, string senha, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginConsultarEstoque(cnpjCliente, codigoProduto, descricaoProduto, senha, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndConsultarEstoque(System.IAsyncResult result) {
            return base.Channel.EndConsultarEstoque(result);
        }
        
        private System.IAsyncResult OnBeginConsultarEstoque(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string cnpjCliente = ((string)(inValues[0]));
            string codigoProduto = ((string)(inValues[1]));
            string descricaoProduto = ((string)(inValues[2]));
            string senha = ((string)(inValues[3]));
            return this.BeginConsultarEstoque(cnpjCliente, codigoProduto, descricaoProduto, senha, callback, asyncState);
        }
        
        private object[] OnEndConsultarEstoque(System.IAsyncResult result) {
            string retVal = this.EndConsultarEstoque(result);
            return new object[] {
                    retVal};
        }
        
        private void OnConsultarEstoqueCompleted(object state) {
            if ((this.ConsultarEstoqueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ConsultarEstoqueCompleted(this, new ConsultarEstoqueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ConsultarEstoqueAsync(string cnpjCliente, string codigoProduto, string descricaoProduto, string senha) {
            this.ConsultarEstoqueAsync(cnpjCliente, codigoProduto, descricaoProduto, senha, null);
        }
        
        public void ConsultarEstoqueAsync(string cnpjCliente, string codigoProduto, string descricaoProduto, string senha, object userState) {
            if ((this.onBeginConsultarEstoqueDelegate == null)) {
                this.onBeginConsultarEstoqueDelegate = new BeginOperationDelegate(this.OnBeginConsultarEstoque);
            }
            if ((this.onEndConsultarEstoqueDelegate == null)) {
                this.onEndConsultarEstoqueDelegate = new EndOperationDelegate(this.OnEndConsultarEstoque);
            }
            if ((this.onConsultarEstoqueCompletedDelegate == null)) {
                this.onConsultarEstoqueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnConsultarEstoqueCompleted);
            }
            base.InvokeAsync(this.onBeginConsultarEstoqueDelegate, new object[] {
                        cnpjCliente,
                        codigoProduto,
                        descricaoProduto,
                        senha}, this.onEndConsultarEstoqueDelegate, this.onConsultarEstoqueCompletedDelegate, userState);
        }
        
        public int ValidarLoginCliente(string login, string senha) {
            return base.Channel.ValidarLoginCliente(login, senha);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginValidarLoginCliente(string login, string senha, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidarLoginCliente(login, senha, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndValidarLoginCliente(System.IAsyncResult result) {
            return base.Channel.EndValidarLoginCliente(result);
        }
        
        private System.IAsyncResult OnBeginValidarLoginCliente(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string login = ((string)(inValues[0]));
            string senha = ((string)(inValues[1]));
            return this.BeginValidarLoginCliente(login, senha, callback, asyncState);
        }
        
        private object[] OnEndValidarLoginCliente(System.IAsyncResult result) {
            int retVal = this.EndValidarLoginCliente(result);
            return new object[] {
                    retVal};
        }
        
        private void OnValidarLoginClienteCompleted(object state) {
            if ((this.ValidarLoginClienteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidarLoginClienteCompleted(this, new ValidarLoginClienteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidarLoginClienteAsync(string login, string senha) {
            this.ValidarLoginClienteAsync(login, senha, null);
        }
        
        public void ValidarLoginClienteAsync(string login, string senha, object userState) {
            if ((this.onBeginValidarLoginClienteDelegate == null)) {
                this.onBeginValidarLoginClienteDelegate = new BeginOperationDelegate(this.OnBeginValidarLoginCliente);
            }
            if ((this.onEndValidarLoginClienteDelegate == null)) {
                this.onEndValidarLoginClienteDelegate = new EndOperationDelegate(this.OnEndValidarLoginCliente);
            }
            if ((this.onValidarLoginClienteCompletedDelegate == null)) {
                this.onValidarLoginClienteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidarLoginClienteCompleted);
            }
            base.InvokeAsync(this.onBeginValidarLoginClienteDelegate, new object[] {
                        login,
                        senha}, this.onEndValidarLoginClienteDelegate, this.onValidarLoginClienteCompletedDelegate, userState);
        }
        
        public string RetornarLoginCliente(string login, string senha) {
            return base.Channel.RetornarLoginCliente(login, senha);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRetornarLoginCliente(string login, string senha, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRetornarLoginCliente(login, senha, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndRetornarLoginCliente(System.IAsyncResult result) {
            return base.Channel.EndRetornarLoginCliente(result);
        }
        
        private System.IAsyncResult OnBeginRetornarLoginCliente(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string login = ((string)(inValues[0]));
            string senha = ((string)(inValues[1]));
            return this.BeginRetornarLoginCliente(login, senha, callback, asyncState);
        }
        
        private object[] OnEndRetornarLoginCliente(System.IAsyncResult result) {
            string retVal = this.EndRetornarLoginCliente(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRetornarLoginClienteCompleted(object state) {
            if ((this.RetornarLoginClienteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RetornarLoginClienteCompleted(this, new RetornarLoginClienteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RetornarLoginClienteAsync(string login, string senha) {
            this.RetornarLoginClienteAsync(login, senha, null);
        }
        
        public void RetornarLoginClienteAsync(string login, string senha, object userState) {
            if ((this.onBeginRetornarLoginClienteDelegate == null)) {
                this.onBeginRetornarLoginClienteDelegate = new BeginOperationDelegate(this.OnBeginRetornarLoginCliente);
            }
            if ((this.onEndRetornarLoginClienteDelegate == null)) {
                this.onEndRetornarLoginClienteDelegate = new EndOperationDelegate(this.OnEndRetornarLoginCliente);
            }
            if ((this.onRetornarLoginClienteCompletedDelegate == null)) {
                this.onRetornarLoginClienteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRetornarLoginClienteCompleted);
            }
            base.InvokeAsync(this.onBeginRetornarLoginClienteDelegate, new object[] {
                        login,
                        senha}, this.onEndRetornarLoginClienteDelegate, this.onRetornarLoginClienteCompletedDelegate, userState);
        }
        
        public string ListarCentroCusto(string login, string senha, int idRemetente) {
            return base.Channel.ListarCentroCusto(login, senha, idRemetente);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginListarCentroCusto(string login, string senha, int idRemetente, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListarCentroCusto(login, senha, idRemetente, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndListarCentroCusto(System.IAsyncResult result) {
            return base.Channel.EndListarCentroCusto(result);
        }
        
        private System.IAsyncResult OnBeginListarCentroCusto(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string login = ((string)(inValues[0]));
            string senha = ((string)(inValues[1]));
            int idRemetente = ((int)(inValues[2]));
            return this.BeginListarCentroCusto(login, senha, idRemetente, callback, asyncState);
        }
        
        private object[] OnEndListarCentroCusto(System.IAsyncResult result) {
            string retVal = this.EndListarCentroCusto(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListarCentroCustoCompleted(object state) {
            if ((this.ListarCentroCustoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListarCentroCustoCompleted(this, new ListarCentroCustoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListarCentroCustoAsync(string login, string senha, int idRemetente) {
            this.ListarCentroCustoAsync(login, senha, idRemetente, null);
        }
        
        public void ListarCentroCustoAsync(string login, string senha, int idRemetente, object userState) {
            if ((this.onBeginListarCentroCustoDelegate == null)) {
                this.onBeginListarCentroCustoDelegate = new BeginOperationDelegate(this.OnBeginListarCentroCusto);
            }
            if ((this.onEndListarCentroCustoDelegate == null)) {
                this.onEndListarCentroCustoDelegate = new EndOperationDelegate(this.OnEndListarCentroCusto);
            }
            if ((this.onListarCentroCustoCompletedDelegate == null)) {
                this.onListarCentroCustoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListarCentroCustoCompleted);
            }
            base.InvokeAsync(this.onBeginListarCentroCustoDelegate, new object[] {
                        login,
                        senha,
                        idRemetente}, this.onEndListarCentroCustoDelegate, this.onListarCentroCustoCompletedDelegate, userState);
        }
        
        public string ListarCidade(string login, string senha, string estado, string cidade) {
            return base.Channel.ListarCidade(login, senha, estado, cidade);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginListarCidade(string login, string senha, string estado, string cidade, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListarCidade(login, senha, estado, cidade, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndListarCidade(System.IAsyncResult result) {
            return base.Channel.EndListarCidade(result);
        }
        
        private System.IAsyncResult OnBeginListarCidade(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string login = ((string)(inValues[0]));
            string senha = ((string)(inValues[1]));
            string estado = ((string)(inValues[2]));
            string cidade = ((string)(inValues[3]));
            return this.BeginListarCidade(login, senha, estado, cidade, callback, asyncState);
        }
        
        private object[] OnEndListarCidade(System.IAsyncResult result) {
            string retVal = this.EndListarCidade(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListarCidadeCompleted(object state) {
            if ((this.ListarCidadeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListarCidadeCompleted(this, new ListarCidadeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListarCidadeAsync(string login, string senha, string estado, string cidade) {
            this.ListarCidadeAsync(login, senha, estado, cidade, null);
        }
        
        public void ListarCidadeAsync(string login, string senha, string estado, string cidade, object userState) {
            if ((this.onBeginListarCidadeDelegate == null)) {
                this.onBeginListarCidadeDelegate = new BeginOperationDelegate(this.OnBeginListarCidade);
            }
            if ((this.onEndListarCidadeDelegate == null)) {
                this.onEndListarCidadeDelegate = new EndOperationDelegate(this.OnEndListarCidade);
            }
            if ((this.onListarCidadeCompletedDelegate == null)) {
                this.onListarCidadeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListarCidadeCompleted);
            }
            base.InvokeAsync(this.onBeginListarCidadeDelegate, new object[] {
                        login,
                        senha,
                        estado,
                        cidade}, this.onEndListarCidadeDelegate, this.onListarCidadeCompletedDelegate, userState);
        }
        
        public string ListarPessoa(string login, string senha, bool empresa, string cgcCPF, string nome, int idPessoa) {
            return base.Channel.ListarPessoa(login, senha, empresa, cgcCPF, nome, idPessoa);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginListarPessoa(string login, string senha, bool empresa, string cgcCPF, string nome, int idPessoa, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginListarPessoa(login, senha, empresa, cgcCPF, nome, idPessoa, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndListarPessoa(System.IAsyncResult result) {
            return base.Channel.EndListarPessoa(result);
        }
        
        private System.IAsyncResult OnBeginListarPessoa(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string login = ((string)(inValues[0]));
            string senha = ((string)(inValues[1]));
            bool empresa = ((bool)(inValues[2]));
            string cgcCPF = ((string)(inValues[3]));
            string nome = ((string)(inValues[4]));
            int idPessoa = ((int)(inValues[5]));
            return this.BeginListarPessoa(login, senha, empresa, cgcCPF, nome, idPessoa, callback, asyncState);
        }
        
        private object[] OnEndListarPessoa(System.IAsyncResult result) {
            string retVal = this.EndListarPessoa(result);
            return new object[] {
                    retVal};
        }
        
        private void OnListarPessoaCompleted(object state) {
            if ((this.ListarPessoaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ListarPessoaCompleted(this, new ListarPessoaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ListarPessoaAsync(string login, string senha, bool empresa, string cgcCPF, string nome, int idPessoa) {
            this.ListarPessoaAsync(login, senha, empresa, cgcCPF, nome, idPessoa, null);
        }
        
        public void ListarPessoaAsync(string login, string senha, bool empresa, string cgcCPF, string nome, int idPessoa, object userState) {
            if ((this.onBeginListarPessoaDelegate == null)) {
                this.onBeginListarPessoaDelegate = new BeginOperationDelegate(this.OnBeginListarPessoa);
            }
            if ((this.onEndListarPessoaDelegate == null)) {
                this.onEndListarPessoaDelegate = new EndOperationDelegate(this.OnEndListarPessoa);
            }
            if ((this.onListarPessoaCompletedDelegate == null)) {
                this.onListarPessoaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnListarPessoaCompleted);
            }
            base.InvokeAsync(this.onBeginListarPessoaDelegate, new object[] {
                        login,
                        senha,
                        empresa,
                        cgcCPF,
                        nome,
                        idPessoa}, this.onEndListarPessoaDelegate, this.onListarPessoaCompletedDelegate, userState);
        }
        
        public string ConsultarFinanceiro(string login, string senha, string tipoDocumento, string numeroDocumento, string dataVencimentoInicial, string dataVencimentoFinal, string dataEmissaoInicial, string dataEmissaoFinal, int idEmpresaEmissora) {
            return base.Channel.ConsultarFinanceiro(login, senha, tipoDocumento, numeroDocumento, dataVencimentoInicial, dataVencimentoFinal, dataEmissaoInicial, dataEmissaoFinal, idEmpresaEmissora);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginConsultarFinanceiro(string login, string senha, string tipoDocumento, string numeroDocumento, string dataVencimentoInicial, string dataVencimentoFinal, string dataEmissaoInicial, string dataEmissaoFinal, int idEmpresaEmissora, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginConsultarFinanceiro(login, senha, tipoDocumento, numeroDocumento, dataVencimentoInicial, dataVencimentoFinal, dataEmissaoInicial, dataEmissaoFinal, idEmpresaEmissora, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndConsultarFinanceiro(System.IAsyncResult result) {
            return base.Channel.EndConsultarFinanceiro(result);
        }
        
        private System.IAsyncResult OnBeginConsultarFinanceiro(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string login = ((string)(inValues[0]));
            string senha = ((string)(inValues[1]));
            string tipoDocumento = ((string)(inValues[2]));
            string numeroDocumento = ((string)(inValues[3]));
            string dataVencimentoInicial = ((string)(inValues[4]));
            string dataVencimentoFinal = ((string)(inValues[5]));
            string dataEmissaoInicial = ((string)(inValues[6]));
            string dataEmissaoFinal = ((string)(inValues[7]));
            int idEmpresaEmissora = ((int)(inValues[8]));
            return this.BeginConsultarFinanceiro(login, senha, tipoDocumento, numeroDocumento, dataVencimentoInicial, dataVencimentoFinal, dataEmissaoInicial, dataEmissaoFinal, idEmpresaEmissora, callback, asyncState);
        }
        
        private object[] OnEndConsultarFinanceiro(System.IAsyncResult result) {
            string retVal = this.EndConsultarFinanceiro(result);
            return new object[] {
                    retVal};
        }
        
        private void OnConsultarFinanceiroCompleted(object state) {
            if ((this.ConsultarFinanceiroCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ConsultarFinanceiroCompleted(this, new ConsultarFinanceiroCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ConsultarFinanceiroAsync(string login, string senha, string tipoDocumento, string numeroDocumento, string dataVencimentoInicial, string dataVencimentoFinal, string dataEmissaoInicial, string dataEmissaoFinal, int idEmpresaEmissora) {
            this.ConsultarFinanceiroAsync(login, senha, tipoDocumento, numeroDocumento, dataVencimentoInicial, dataVencimentoFinal, dataEmissaoInicial, dataEmissaoFinal, idEmpresaEmissora, null);
        }
        
        public void ConsultarFinanceiroAsync(string login, string senha, string tipoDocumento, string numeroDocumento, string dataVencimentoInicial, string dataVencimentoFinal, string dataEmissaoInicial, string dataEmissaoFinal, int idEmpresaEmissora, object userState) {
            if ((this.onBeginConsultarFinanceiroDelegate == null)) {
                this.onBeginConsultarFinanceiroDelegate = new BeginOperationDelegate(this.OnBeginConsultarFinanceiro);
            }
            if ((this.onEndConsultarFinanceiroDelegate == null)) {
                this.onEndConsultarFinanceiroDelegate = new EndOperationDelegate(this.OnEndConsultarFinanceiro);
            }
            if ((this.onConsultarFinanceiroCompletedDelegate == null)) {
                this.onConsultarFinanceiroCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnConsultarFinanceiroCompleted);
            }
            base.InvokeAsync(this.onBeginConsultarFinanceiroDelegate, new object[] {
                        login,
                        senha,
                        tipoDocumento,
                        numeroDocumento,
                        dataVencimentoInicial,
                        dataVencimentoFinal,
                        dataEmissaoInicial,
                        dataEmissaoFinal,
                        idEmpresaEmissora}, this.onEndConsultarFinanceiroDelegate, this.onConsultarFinanceiroCompletedDelegate, userState);
        }
    }
}
